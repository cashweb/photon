# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: protos/transaction.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import protos.transaction_pb2


class TransactionBase(abc.ABC):

    @abc.abstractmethod
    async def Broadcast(self, stream: 'grpclib.server.Stream[protos.transaction_pb2.BroadcastRequest, protos.transaction_pb2.BroadcastResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Transaction(self, stream: 'grpclib.server.Stream[protos.transaction_pb2.TransactionRequest, protos.transaction_pb2.TransactionResponse]') -> None:
        pass

    @abc.abstractmethod
    async def MerkleBranch(self, stream: 'grpclib.server.Stream[protos.transaction_pb2.MerkleBranchRequest, protos.transaction_pb2.MerkleBranchResponse]') -> None:
        pass

    @abc.abstractmethod
    async def IdFromPos(self, stream: 'grpclib.server.Stream[protos.transaction_pb2.IdFromPosRequest, protos.transaction_pb2.IdFromPosResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/transaction.Transaction/Broadcast': grpclib.const.Handler(
                self.Broadcast,
                grpclib.const.Cardinality.UNARY_UNARY,
                protos.transaction_pb2.BroadcastRequest,
                protos.transaction_pb2.BroadcastResponse,
            ),
            '/transaction.Transaction/Transaction': grpclib.const.Handler(
                self.Transaction,
                grpclib.const.Cardinality.UNARY_UNARY,
                protos.transaction_pb2.TransactionRequest,
                protos.transaction_pb2.TransactionResponse,
            ),
            '/transaction.Transaction/MerkleBranch': grpclib.const.Handler(
                self.MerkleBranch,
                grpclib.const.Cardinality.UNARY_UNARY,
                protos.transaction_pb2.MerkleBranchRequest,
                protos.transaction_pb2.MerkleBranchResponse,
            ),
            '/transaction.Transaction/IdFromPos': grpclib.const.Handler(
                self.IdFromPos,
                grpclib.const.Cardinality.UNARY_UNARY,
                protos.transaction_pb2.IdFromPosRequest,
                protos.transaction_pb2.IdFromPosResponse,
            ),
        }


class TransactionStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Broadcast = grpclib.client.UnaryUnaryMethod(
            channel,
            '/transaction.Transaction/Broadcast',
            protos.transaction_pb2.BroadcastRequest,
            protos.transaction_pb2.BroadcastResponse,
        )
        self.Transaction = grpclib.client.UnaryUnaryMethod(
            channel,
            '/transaction.Transaction/Transaction',
            protos.transaction_pb2.TransactionRequest,
            protos.transaction_pb2.TransactionResponse,
        )
        self.MerkleBranch = grpclib.client.UnaryUnaryMethod(
            channel,
            '/transaction.Transaction/MerkleBranch',
            protos.transaction_pb2.MerkleBranchRequest,
            protos.transaction_pb2.MerkleBranchResponse,
        )
        self.IdFromPos = grpclib.client.UnaryUnaryMethod(
            channel,
            '/transaction.Transaction/IdFromPos',
            protos.transaction_pb2.IdFromPosRequest,
            protos.transaction_pb2.IdFromPosResponse,
        )
