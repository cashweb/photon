syntax = "proto3";

package wish_list;

message TXOInfoRequest {
    message TXO {
        // The transaction hash as bytes
        bytes txid = 1;
        // The transaction output's 0-indexed position in txid
        uint32 pos = 2;
    }
    // The list of txo's we are querying about
    repeated TXO txos = 1;
}

message TXOInfoResponse {
    message TXOInfo {
        // The actual output script as it appeared in the tx. This can be further parsed by the client to derive the address.
        bytes script = 1;
        // The output's amount in satoshis
        uint64 amount = 2;

        message SpentInfo {
            // If not empty, the txid that spent this output
            bytes txid  = 1; //< Note to Harry: if this proves costly performance-wise to obtain, just a bool here if it was spent would also help!
            // The input number in txid where this txo appears.
            uint32 pos = 2; //< Note to Harry: again, these two fields can just be collapsed down to a bool...
        }
        // Note to Harry: I'm not sure which one of the below to use here. Minimally it's nice to
        // know if a txo was spent.  But optionally if it's not too slow on the server-side, it's nice
        // to know where a txo was spent if it was spent.  This helps wallets out with UI.
        // Note 2: not sure if this 'oneof' syntax here is correct. I made this a oneof so that utxo=true *OR*
        //         the spent_info will be populated.  If it turns out retrieving spent_info like this is slow,
        //         can just use the bool.
        oneof Spent {
            // Where it was spent
            SpentInfo spent_info = 3;
            // if true, the txo was not spent
            bool utxo = 4;
        }
    }
    // The list of responses for each of the txo's mentioned in TXOInfoRequest.txos[i]
    repeated TXOInfo txo_infos = 1;
}


service WishList {
  // Get information on some txo's, such as script, value and/or if it was spent and where it was spent.
  rpc TXOInfo(TXOInfoRequest) returns (TXOInfoResponse);
}
