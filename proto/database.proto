syntax = "proto3";

package database;

// Mimics the TransactionResponse message in transaction package
message TransactionEntry {
  // The raw transaction. Empty when not cached.
  bytes raw_tx = 1;
  // The height of the block the transaction was confirmed in.
  uint32 block_height = 2;
  // A list of transaction hashes the current hash is paired with, recursively,
  // in order to trace up to obtain merkle root of the block, deepest pairing
  // first.
  repeated bytes merkle = 3;
  // The 0-based index of the position of the transaction in the ordered list of
  // transactions in the block.
  uint32 pos = 4;
}

// Mimics HeadersResponse message in header package
message HeaderEntry {
  // The raw block headers in-order.
  bytes header = 1;

  // Merkle root of the header tree.
  bytes root = 2;
  // The merkle branch of the last returned header up to root, deepest pairing
  // first.
  repeated bytes branch = 3;
}

// Mimics the ConfirmedItem message in script_hash package
message ScriptHashItem {
  // The integer height of the block the transaction was confirmed in.
  uint32 height = 1;
  // The transaction hash as bytes.
  bytes tx_hash = 2;
}
